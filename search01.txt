./app/base/temp-buf.c:65:  /*  initialize the data  */
./app/main.c:353:  /* Check argv[] for "--no-interface" before trying to initialize gtk+. */
./app/main.c:401:                   _("GIMP could not initialize the graphical user interface.\n"
./app/paint/gimppaintcore.c:845:          /*  initialize any invalid canvas tiles  */
./app/paint/gimppaintcore.c:935:          /*  initialize any invalid canvas tiles  */
./app/paint/gimppaintcore.c:945:          /* initialize the maskPR from the canvas tiles */
./app/paint/gimpbrushcore.c:1030:  /* Allocate and initialize the accum buffer */
./app/display/gimpdisplayshell-callbacks.c:881:                /*  initialize the current tool if it has no drawable
./app/core/gimpimage-convert.c:834:  /* initialize the colour conversion routines */
./app/core/gimp.h:124:  void     (* initialize)     (Gimp               *gimp,
./app/core/gimpimage-colorhash.c:54:  /*  initialize the color hash table--invalidate all entries  */
./app/core/gimp.c:127:    g_signal_new ("initialize",
./app/core/gimp.c:130:                  G_STRUCT_OFFSET (GimpClass, initialize),
./app/core/gimp.c:179:  klass->initialize              = gimp_real_initialize;
./app/core/gimp.c:833:  /*  initialize  the global parasite table  */
./app/core/gimp.c:837:  /*  initialize the list of gimp brushes    */
./app/core/gimp.c:841:  /*  initialize the list of gimp patterns   */
./app/core/gimp.c:845:  /*  initialize the list of gimp palettes   */
./app/core/gimp.c:849:  /*  initialize the list of gimp gradients  */
./app/core/gimp.c:853:  /*  initialize the list of fonts  */
./app/core/gimp.c:858:  /*  initialize the template list  */
./app/core/gimp.c:862:  /*  initialize the module list  */
./app/core/gimp-transform-resize.c:145:  /*  initialize with the original boundary  */
./app/gui/gui.c:228:  g_signal_connect_after (gimp, "initialize",
./app/gui/gui.c:425:  /*  initialize the document history  */
./app/paint-funcs/subsample-region.c:75:  /*  initialize the pre-calculated pixel fraction array  */
./app/paint-funcs/subsample-region.c:276:  /*  initialize the pre-calculated pixel fraction array  */
./app/paint-funcs/paint-funcs.c:3515:      /* With `edge_lock', initialize row above image as selected, otherwise,
./app/paint-funcs/paint-funcs.c:3516:         initialize as unselected. */
./app/paint-funcs/paint-funcs.c:3636:     `edge_lock. If there is an 'edge_lock', initialize the first row to
./app/app.c:187:  /*  initialize lowlevel stuff  */
./app/plug-in/gimpplugin.c:134:  /* initialize the gimp protocol library and set the read and
./app/plug-in/gimppluginmanager-restore.c:109:  /* initialize the plug-ins */
./app/plug-in/gimppluginmanager-restore.c:348:/* initialize the plug-ins */
./app/tools/gimpcolorbalancetool.c:111:  tool_class->initialize             = gimp_color_balance_tool_initialize;
./app/tools/gimpcolorbalancetool.c:169:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpcurvestool.c:161:  tool_class->initialize             = gimp_curves_tool_initialize;
./app/tools/gimpcurvestool.c:227:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpiscissorstool.c:1642:  /*  initialize the dynamic programming buffer  */
./app/tools/gimpposterizetool.c:101:  tool_class->initialize       = gimp_posterize_tool_initialize;
./app/tools/gimpposterizetool.c:157:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpeditselectiontool.c:454:  /* initialize the statusbar display */
./app/tools/gimpgegltool.c:109:  tool_class->initialize       = gimp_gegl_tool_initialize;
./app/tools/gimpgegltool.c:165:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimprectangletool.c:465:  /* No need to initialize anything yet. */
./app/tools/gimprectangletool.c:1978:  /* initialize the statusbar display */
./app/tools/gimppainttool.c:365:  /*  Let the specific painting function initialize itself  */
./app/tools/gimptool.h:84:  gboolean      (* initialize)          (GimpTool              *tool,
./app/tools/gimpperspectiveclonetool.c:144:  tool_class->initialize     = gimp_perspective_clone_tool_initialize;
./app/tools/gimpcolorizetool.c:107:  tool_class->initialize             = gimp_colorize_tool_initialize;
./app/tools/gimpcolorizetool.c:162:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpimagemaptool.c:153:  tool_class->initialize     = gimp_image_map_tool_initialize;
./app/tools/gimphuesaturationtool.c:119:  tool_class->initialize             = gimp_hue_saturation_tool_initialize;
./app/tools/gimphuesaturationtool.c:177:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimplevelstool.c:168:  tool_class->initialize             = gimp_levels_tool_initialize;
./app/tools/gimplevelstool.c:238:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpbrightnesscontrasttool.c:128:  tool_class->initialize             = gimp_brightness_contrast_tool_initialize;
./app/tools/gimpbrightnesscontrasttool.c:190:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpdesaturatetool.c:91:  tool_class->initialize       = gimp_desaturate_tool_initialize;
./app/tools/gimpdesaturatetool.c:131:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimptransformtool.c:118:  tool_class->initialize          = gimp_transform_tool_initialize;
./app/tools/gimpblendtool.c:121:  tool_class->initialize          = gimp_blend_tool_initialize;
./app/tools/gimpblendtool.c:156:  if (! GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error))
./app/tools/gimpthresholdtool.c:107:  tool_class->initialize             = gimp_threshold_tool_initialize;
./app/tools/gimpthresholdtool.c:167:  GIMP_TOOL_CLASS (parent_class)->initialize (tool, display, error);
./app/tools/gimpaligntool.c:152:  tool_class->initialize     = gimp_align_tool_initialize;
./app/tools/gimptool.c:130:  klass->initialize          = gimp_tool_real_initialize;
./app/tools/gimptool.c:428:  if (! GIMP_TOOL_GET_CLASS (tool)->initialize (tool, display, &error))
./app/actions/plug-in-commands.c:113:  /* initialize the first argument  */
./libgimpbase/gimpreloc.c:294: * @param error  If BinReloc failed to initialize, then the error report will
./libgimpbase/gimpreloc.c:299: * @returns TRUE on success, FALSE if BinReloc failed to initialize.
./libgimp/gimpimagecombobox.c:105: * You should use gimp_int_combo_connect() to initialize and connect
./libgimp/gimpitemcombobox.c:159: * You should use gimp_int_combo_box_connect() to initialize and connect
./libgimp/gimpitemcombobox.c:296: * You should use gimp_int_combo_box_connect() to initialize and connect
./libgimp/gimp.c:395:  /*  initialize units  */
./libgimp/gimp.c:416:  /* initialize i18n support */
./plug-ins/file-uri/uri-backend-gnomevfs.c:82:                   "%s", "Could not initialize GnomeVFS");
./plug-ins/file-uri/uri-backend-libcurl.c:60:                   "%s", _("Could not initialize libcurl"));
./plug-ins/ifs-compose/ifs-compose.c:1849:  /* initialize */
./plug-ins/file-jpeg/jpeg-save.c:285:  /* Step 1: allocate and initialize JPEG compression object */
./plug-ins/file-jpeg/jpeg-save.c:311:  /* Now we can initialize the JPEG compression object. */
./plug-ins/file-jpeg/jpeg-save.c:1570:  /* Now we can initialize the JPEG compression object. */
./plug-ins/file-jpeg/jpeg-load.c:125:  // Now we can initialize the JPEG decompression object.
./plug-ins/file-jpeg/jpeg-load.c:574:  // Now we can initialize the JPEG decompression object.
./plug-ins/file-jpeg/jpeg-load.c:751:  // Now we can initialize the JPEG decompression object.
./plug-ins/lighting/lighting-ui.c:1362:          /* initialize lights to off */
./plug-ins/file-faxg3/faxg3.c:220:  /* initialize lookup trees */
./plug-ins/file-faxg3/faxg3.c:257:  /* initialize bitmap */
./plug-ins/file-faxg3/faxg3.c:467:  /* initialize */
./plug-ins/file-fits/fits-io.c:11:/*  Function(s)   : fits_new_filestruct    - (local) initialize file structure*/
./plug-ins/file-fits/fits-io.c:12:/*                  fits_new_hdulist       - (local) initialize hdulist struct*/
./plug-ins/file-fits/fits-io.c:260:/* Function  : fits_new_filestruct - (local) initialize file structure       */
./plug-ins/file-fits/fits-io.c:286:/* Function  : fits_new_hdulist    - (local) initialize hdulist structure    */
./plug-ins/file-fits/fits-io.c:557: /* initialize */
./plug-ins/file-fits/fits-io.c:1395:     /* initialize */
./plug-ins/file-fits/fits-io.c:1437:     /* initialize */
./plug-ins/file-fits/fits-io.c:1812: /* initialize */
./plug-ins/file-psd/psd-image-res-load.c:964:  /* Step 1: Allocate and initialize JPEG decompression object */
./plug-ins/fractal-explorer/fractal-explorer.c:425:  /*  initialize the pixel regions  */
./plug-ins/imagemap/imap_ncsa_lex.c:301:static int yy_init = 0;		/* whether we need to initialize */
./plug-ins/imagemap/imap_ncsa_lex.c:1405:/** Allocate and initialize an input buffer state.
./plug-ins/imagemap/imap_cern_lex.c:301:static int yy_init = 0;		/* whether we need to initialize */
./plug-ins/imagemap/imap_cern_lex.c:1420:/** Allocate and initialize an input buffer state.
./plug-ins/imagemap/imap_csim_lex.c:301:static int yy_init = 0;		/* whether we need to initialize */
./plug-ins/imagemap/imap_csim_lex.c:1537:/** Allocate and initialize an input buffer state.
./plug-ins/file-bmp/bmp-read.c:658:  /* use g_malloc0 to initialize the dest buffer so that unspecified
./plug-ins/script-fu/tinyscheme/scheme.c:4886:    fprintf(stderr,"Could not initialize!\n");
./plug-ins/script-fu/scheme-wrapper.c:221:      g_message ("Could not initialize TinyScheme!");
./plug-ins/script-fu/script-fu-server.c:1036:      emsg = "Unable to initialize a service provider";
./plug-ins/gfig/gfig-dobject.c:761:  /* initialize style when we add the object */
./plug-ins/gfig/gfig.c:217:  /* initialize */
./plug-ins/file-xjt/xjpeg.c:135:  /* Now we can initialize the JPEG decompression object. */
./plug-ins/file-xjt/xjpeg.c:318:  // Now we can initialize the JPEG decompression object.
./plug-ins/file-xjt/xjpeg.c:494:  /* Now we can initialize the JPEG decompression object. */
./plug-ins/file-xjt/xjpeg.c:707:  /* Step 1: allocate and initialize JPEG compression object */
./plug-ins/file-xjt/xjpeg.c:733:  /* Now we can initialize the JPEG compression object. */
./plug-ins/pygimp/gimpcolormodule.c:434:	Py_FatalError("can't initialize module gimpcolor");
./plug-ins/pygimp/gimpenumsmodule.c:134:	Py_FatalError("can't initialize module _gimpenums");
./plug-ins/pygimp/gimpuimodule.c:81:	Py_FatalError("can't initialize module _gimpui");
./plug-ins/pygimp/gimpthumbmodule.c:61:	Py_FatalError("can't initialize module gimpthumb");
./plug-ins/pygimp/gimpmodule.c:1874:    /* initialize i18n support */
./plug-ins/pygimp/gimpmodule.c:1954:        Py_FatalError("can't initialize module gimp");
./plug-ins/file-fli/fli-gimp.c:759:  /* initialize with bg color */
./plug-ins/common/file-sunras.c:1281:  /* initialize */
./plug-ins/common/tile-glass.c:405:  /* initialize the pixel regions, set grid height/width */
./plug-ins/common/warp.c:266:  tile_width  = gimp_tile_width ();    /* initialize some globals */
./plug-ins/common/warp.c:760:  /* initialize the pixel regions (read from source, write into dest)  */
./plug-ins/common/warp.c:978:  /*  initialize the source and destination pixel regions  */
./plug-ins/common/warp.c:1324:  gdouble xval=0;      /* initialize to quiet compiler grumbles */
./plug-ins/common/rotate.c:270:  /* initialize */
./plug-ins/common/blur-gauss-selective.c:809:  /* initialize pixel regions */
./plug-ins/common/edge-laplace.c:259:  /*  initialize the pixel regions  */
./plug-ins/common/color-exchange.c:166:      /* initialize using foreground color */
./plug-ins/common/crop-zealous.c:186:  /*  initialize the pixel regions  */
./plug-ins/common/depth-merge.c:380:  /* initialize */
./plug-ins/common/edge.c:664:  // initialize pixel regions
./plug-ins/common/blur.c:272:   *  initialize the pixel regions
./plug-ins/common/checkerboard.c:407:  /*  initialize the values  */
./plug-ins/common/noise-randomize.c:514:   *  initialize the pixel regions
./plug-ins/common/file-png.c:744:   * Open the file and initialize the PNG read "engine"...
./plug-ins/common/file-png.c:1278:   * Open the file and initialize the PNG write "engine"...
./plug-ins/common/polar-coords.c:387:  /* initialize */
./plug-ins/common/mosaic.c:1012:  /*  initialize  */
./plug-ins/common/color-cube-analyze.c:215:  /* initialize the pixel region */
./plug-ins/common/grid.c:711:  /*  initialize the values  */
./plug-ins/common/grid.c:784:  /*  initialize the values  */
./plug-ins/common/grid.c:851:  /*  initialize the values  */
./plug-ins/common/crop-auto.c:202:  /*  initialize the pixel regions  */
./plug-ins/common/displace.c:548:  /* initialize */
./plug-ins/common/screenshot.c:279:  /* initialize the return of the status */
./plug-ins/common/film.c:354:  /* initialize */
./plug-ins/common/lens-flare.c:392:      /*  initialize the pixel regions  */
./plug-ins/common/blur-motion.c:511:  /* initialize */
./plug-ins/common/blur-motion.c:722:  /* initialize */
./plug-ins/common/convolution-matrix.c:530:  // initialize the pixel regions
./plug-ins/common/convolution-matrix.c:538:  // initialize source arrays
./plug-ins/common/nova.c:741:   /* initialize */
./plug-ins/common/edge-sobel.c:387:  /*  initialize the pixel regions  */
./plug-ins/common/destripe.c:254:  /* initialize */
./plug-ins/common/tile.c:238:  /* initialize */
./plug-ins/common/file-ps.c:1182:  /* initialize */
./plug-ins/common/file-ps.c:2179:  /* initialize */
./plug-ins/common/unsharp-mask.c:185:      /* initialize pixel regions and buffer */
./plug-ins/common/unsharp-mask.c:393:  /* initialize pixel regions */
./plug-ins/common/apply-canvas.c:1390:  /*  initialize the pixel regions  */
./plug-ins/common/sparkle.c:743:  /* initialize the progress dialog */
./tools/pdbgen/README:77:in conjunction with the "no_declare" flag. "init" simply says initialize
./tools/test-clipboard.c:127:                   "Could not initialize the graphical user interface.\n"

